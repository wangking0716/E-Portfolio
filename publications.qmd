---
title: "Work & Project"
---

# ***Raster and Least Cost Path Analysis Using QGIS and ArcGIS Pro***

**QGIS**

-   Rasterize the study area of grizzly bear shapefile using GDAL

    -   The polygons represent Grizzly Bear population units in the Rocky Mountain foothills of Alberta

-   Mosaicked 14 DEM tiles in the region into single raster using GDAL Merge tool.

-   Clipped the single DEM raster to the rasterize grizzly bear study area for further analysis

-   Generate a total cost raster representing cost of movement for grizzly bears

-   The cost factors include:

    -   slope

    -   land cover

    -   road crossing

-   combined these factors using own-defined weights to create cost raster

**ArcGIS Pro:**

-   Perform a least cost path analysis in ArcGIS Pro

    -   define the optimal route for moving between primary and secondary habitats

-   Adding layers created in QGIS:

    -   Total cost raster

    -   DEM of the study area

    -   slope, land cover, roads

    -   primary/ secondary habitats

-   Using Distance Accumulation and Optimal Path as Line tool to create least-cost path between the primary and secondary habitats

![](images/Screenshot_27-2-2025_231036_.jpeg){width="643"}

**Map showing least-cost path of Grizzly Bear traveling between two habitats within bear management area in Alberta**

# Trees points cloud data handle by lidR package in R studio 

## Individual tree detection within a plot in Malcolm Knapp Research Forest (MKRF) UBC 

## Code snippets

::: {.panel-tabset group="language"}
## R

``` (.r)
library(lidR)
#read normalized las into catalog to continue processing
norm_cat_mkrf <- readLAScatalog("Normalized")
#add LAScatalog enginge option to filter undersired data points
opt_filter(norm_cat_mkrf) <- '-drop_z_below 0 -drop_z_above 65'
#for loop to extract multiple plots
for(i in 1:nrow(plot_table)){ #run the loop until i = the number of rows in 'plot_table' (20)
  plot_cent <- c(plot_table$X[i], plot_table$Y[i]) #extract plot center
  plot_las <- clip_circle(norm_cat_mkrf, plot_cent[1], plot_cent[2], radius) #clip plot from norm_cat_las
  output_file <- paste("Plots/MKRF_Plot_", i, ".las", sep = "") #output directory as string
  writeLAS(assign(paste("MKRF_Plot_", i, sep = ""), plot_las), output_file) #write'MKRF_Plot_i' to output dir.
}
#using li2012 algorithm for single tree#
#plot1
plot1_segment <- segment_trees(MKRF_Plot_1,li2012(dt1=1.5,dt2=2,Zu=15,R=2,speed_up=10))
plot(plot1_segment, color = "treeID") # Color trees by unique ID
```
:::

## 2D figures

![](images/Screenshot%20(95).png)

MKRF_Plot_1

## Visualized Canopy Height Model in 3D

::: {.panel-tabset group="language"}
## R

``` (.r)
#Create CHM for normalized Tile 1
chm_mkrf_1 <- rasterize_canopy(norm_mkrf_1, 2, p2r())
plot(chm_mkrf_1, col = col_1) #plot in 2D
plot_dtm3d(chm_mkrf_1) #plot in 3D
```
:::

![](images/Screenshot%202025-02-28%20001138.png){width="687"}

3D figure of MKRF CHM
